{"hash":"8059e48f81a11b3239ebb14a6eab55743492b3b2","data":{"event":{"title":"Dominic Robinson - On reflecting on runtime or \"Program, know thyself\"","description":"<p>This month's talk is an extract from Dominic Robinson's session at the upcoming ACCU Conference.</p> <p><b>On reflecting on runtime or \"<i>Program, know thyself\"</i></b></p> <p>In a language not renowned for its reflection capabilities we struggle to give programs a view of their own static properties.  So what then of runtime?  Can a program know what it is doing, or why it is doing it? </p> <p>If programs can become aware of their own and other program's motives what can we expect? </p> <p>\"Intention framing\" is an experimental technique to provide out of band domain oriented annotations of the intent of executing code. </p> <p>This talk will cover: </p> <p>• The motivations for Intention Frames. </p> <p>• An implementation technique for serial, parallel, and distributed Actor based programs in C++. </p> <p>• Opportunities for using Intention Frames in system testing. </p> <p><b>About our Speaker:</b></p> <p>Dominic has mis-spent the last 28 years developing video games, flight simulators and software development tools in various assembly languages, C and C++. He founded and sold a video games company during the .com boom and is now a principal engineer at SN Systems, the subsidiary of Sony Computer Entertainment that is responsible for the development tools for the Sony PlayStation platforms. He has spent the last 6 years developing a fault tolerant, distributed build accelerator in C++ in the style of Erlang. </p> "}},"context":{}}